///// HEADER

.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

.search {
    flex: 0 0 40%;
    display: flex;
    align-items: center;
    justify-content: center;

    &__input {
        font-family: inherit; // inherits global font family
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }
        
        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);
        margin-left: -3.75rem;

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }
    
    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);
    }
}

.user-nav {
    background: #fff;
    display: flex;
    align-items: center;
    align-self: stretch;    /*it was centered due to header align-items: center */

    & > * {   /*2 different class inside user-nav,
            more simple to select all child element rather than using 2 class selectors */
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1rem;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.5rem;
        width: 3.5rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

///// SIDE NAVIGATION
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    &__item::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        transition: transform .2s,
            width .4s cubic-bezier(1,0,0,1) .2s,
            background-color .1s;
        transform-origin: bottom;
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background: var(--color-primary-light);
    }

    &__link:link, &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        display: flex;
        align-items: center;
        position: relative;
        z-index: 2; /*z-index only works if we have a position specified */
    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;
    }
}

.legal {
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--colo-grey-light-4);
}

/* GALLERY */
.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block;
    }
}

/* OVERVIEW */
.overview {
    display: flex;
    align-items: center;
    border-bottom: var(--line);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        /*flex: 1;  - it would occupy all available space inside flexbox, but this would cause problems for example when
        when hovering the stars, all the space would be hovered too */
        margin-right: auto;     /* element still looks like occupying all available space, but now it has margin,
        so the "stars" element has the size of content now instead of all the available space */
        display: flex; /* svg-s are similar to text, that produces whitespace... 
        display flex fixes little space under each star item, they werent perfectly aligned vertically */
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: #fff;
        align-self: stretch;
        padding: 0 2.25rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

    &__rating-average {
        font-size: 2.75rem;
        font-weight: 300;
        margin-bottom: -5px;
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}

/* BUTTON INLINE */
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor; /* border will have the exact same, as the current text in that area */
    padding-bottom: 2px;
    display: inline-block;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    & span {
        margin-left: 3px;
    }
    
    &:hover {
        color: var(--color-grey-dark-1); /* border also becomes the same color as the text color. Without currentColor we 
                                            would need one more line for hover: border-bottom: color-grey... */

        span {
            margin-left: 8px;
            /* transition: all .2s; transition all is also written at btn-inline. If we use the same here, it makes 
            the arrow span not changing color when hovering... we have to use the margin instead in transition here to make it work*/
            transition: margin-left .2s; 
        }                                       
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }

    @keyframes pulsate {
        0% {
            transform: scale(1);
            box-shadow: none;
        }
        50% {
            transform: scale(1.2);
            box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
        }
        100% {
            transform: scale(1);
            box-shadow: none;
        }
    }
}

/* PARAGRAPH */
.paragraph:not(:last-of-type) {
    margin-bottom: 2rem;
}

/* LIST */
.list {
    margin: 3rem 0;
    padding: 3rem;
    border-top: var(--line);
    border-bottom: var(--line);
    list-style: none;
    display: flex;
    flex-wrap: wrap;
    
    &__item {
        flex: 0 0 50%;
        margin-bottom: .7rem;
        display: flex;
        align-items: center;
    }   

    &__item::before {       // cleaner practise than to put inside &__item
        content: '';
        display: inline-block;
        height: 2rem;
        width: 2rem;
        margin-right: .7rem;
        // new browsers
        background-color: var(--color-primary);
        -webkit-mask-image: url("../img/chevron-thin-right.svg");
        -webkit-mask-size: cover;
        mask-image: url("../img/chevron-thin-right.svg");
        mask-size: cover;

        // older browsers. Problem. It's a bg image, so we cant change color of the arrow
        // background-image: url("../img/chevron-thin-right.svg");
        // background-size: cover;
    }
}

/* RECOMMEND */
.recommend {
    font-size: 1.3rem;
    color: var(--color-grey-dark-3);
    display: flex;
    align-items: center;

    &__count {
        margin-right: auto;
    }

    &__photo {
        height: 4rem;
        width: 4rem;
        border-radius: 50%;
        border: 3px solid #fff;
        box-sizing: content-box;    /*make image include the 3px border, otherwise image looks bigger because of the extra border */
        
        &:not(:last-child) {
            margin-right: -1.15rem;
        }
    }
}

/* REVIEW */
.review {
    background-color: #fff;
    box-sizing: var(shadow-light);
    padding: 3rem;
    margin-bottom: 3.5rem;
    position: relative;
    overflow: hidden;

    &__text {
        margin-bottom: 2rem;
        z-index: 2;
        position: relative; /* z-index only works if we set the position */
    }

    &__user {
        display: flex;
        align-items: center;
    }

    &__photo {
        width: 4.5rem;
        height: 4.5rem;
        border-radius: 50%;
        margin-right: 1.5rem;
    }

    &__user-box {
    }

    &__user-name {
        font-size: 1.1rem;
        font-weight: 600;
        text-transform: uppercase;
        margin-bottom: .4rem;
    }

    &__user-date {
        font-size: 1rem;
        color: var(--color-grey-dark-3);
    }

    &__rating {
        margin-left: auto;
        color: var(--color-primary);
        font-weight: 300;
    }

    &::before {
        content: '\201C';
        position: absolute;
        top: -2.7rem;
        left: -1rem;
        font-size: 20rem;
        color: var(--color-grey-light-2);
        font-family: sans-serif;
        line-height: 1;
        z-index: 1;
    }
}

/* CTA */
.cta {
    padding: 3.5rem 0;
    text-align: center;

    &__book-now {
        text-transform: uppercase;
        font-size: 2rem;
        font-weight: 300;
        margin-bottom: 2.5rem;
    }
}

/* BTN */
.btn {
    font-size: 1.5rem;
    font-weight: 300;
    text-transform: uppercase;
    border: none;
    border-radius: 100px;
    background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
    color: #fff;
    position: relative; /* for absolute positioned hidden text */
    overflow: hidden;

    &__visible {
        display: inline-block;
        padding: 2rem 8rem; /* padding will define the size of the button, so it dont have to expand when the longer text appears */
        transition: all .2s;
    }

    &__invisible {
        display: inline-block;
        position: absolute;
        left: 0;
        top: -100%; /* it moves up the element by 100% of the size of parent element */
        padding: 2rem 0;
        height: 100%;
        width: 100%; /* now it has the heigth and width of the parent element */
        transition: all .2s;
    }

    &:hover {
        background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
        /* it changes, but transition doesnt work on background-images !!! */
    }

    &:hover &__visible {
        transform: translateY(100%); /*cant use top:, because didnt use absolute position on this. For 100% height it also
        needs the height and width property, just as the invisible element: */
        height: 100%;
        width: 100%; 
    }

    &:hover &__invisible {
        top: 0; /* comes down from top:-100 position */
    }

    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}