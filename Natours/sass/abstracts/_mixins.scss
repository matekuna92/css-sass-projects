@mixin clearfix {
    &::after {
        content: ''; // always need to specify, otherwise pseudo element wont appear on the page 
        display: table;
        clear: both;
    }
}

@mixin absoluteCenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

// Media Query Manager
/*
    0-600px - phone
    600-900px - tablet portrait
    900-1200px - tablet landscape
    1200-1800px - our normal style applies
    1800px-above - large screen
*/

@mixin respond-phone {
    @media(max-width: 600px) { @content };  // content directive: allows to pass a block of code into the mixin
    // then we can include "respond-phone" in other scss, and give them the correct styles we want
    // the lines we define in _base scss will be the @content here, so mixin will insert all those styles into the css
    // we would write 1 include for every size: respond-tablet, etc.. we can simplify this in one mixin...
}

@mixin respond($breakpoint) {
    @if $breakpoint == phone {
        @media only screen and (max-width: 37.5em) { @content };     // 600px/16 - in media queries em-s are best to use, rem can fail in some browser. Browser default font-size is 16px
    }

    @if $breakpoint == tab-portrait {
        @media only screen and (max-width: 56.25em) { @content };      // 900px/16
    }

    @if $breakpoint == tab-landscape {
        @media only screen and (max-width: 75em) { @content };       // 1200px/16
    }

    @if $breakpoint == big-desktop {
        @media only screen and (min-width: 112.5em) { @content };     // 1800px/16
    }
}