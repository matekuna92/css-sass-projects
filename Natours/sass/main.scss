
$color-primary: #55c57a;
$color-primary-light:  #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*, ::after, ::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%;    /* percentage relative to userAgent browser default(16px) font-size - 10/16 = 0.625 */
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: $color-grey-dark;
    /* padding: 30px; */
    padding: 3rem;
    box-sizing: border-box;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0, 100% 0, 100% 80%, 0 100%); /* specifying corners positions clockwise: top left, top right, , bottom right, bottom left corner */
    position: relative;

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;
    }

    &__text-box {
        position: absolute;
        top: 40%;   /* because of clip pathing, centering with 50-50% looks weird, so we can use 40% */
        left: 50%;
        transform: translate(-50%, -50%);
        text-align: center;
    }
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden; /* fixing that at the end of animation element moves up a bit */
    margin-bottom: 6rem;

    &--main {
        display: block;
        font-size: 6rem;
        font-weight: 700;
        letter-spacing: 3.5rem;
        animation: moveInLeft 1s;
        animation-timing-function: ease-out;
    }

    &--sub {
        display: block;
        font-size: 2rem;
        font-weight: 700;
        letter-spacing: 1.75rem;
        animation: moveInRight 1s ease-out;
    }
}

/* for browser performance it's best to animate only 2 properties: 
    opacity, and transform. These are the one brwosers are optimised for */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }
    80% {
        transform: translateX(1rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }
    80% {
        transform: translateX(-1rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn {
    &:link, &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem;
        display: inline-block; /*  btn is inline element as deafult, but this way the box model works on this element as if it was a normal block element */
        border-radius: 10rem;
        transition: all .2s;     /* all properties are allowed to be animated, transition always has to be on the initial state */
        position: relative;
        font-size: 16px; /* original font-size, user agent using16px, before we set rem units */
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black, 0.25);

        &::after {
            transform: scaleX(1.4) scaleY(1.6);
            opacity: 0;
        }
    }

    &:active {
        transform: translateY(-1px);
        box-shadow: 0 0.5rem 1rem rgba($color-black, 0.25);
    }

    &--white {
        background: $color-white;
        color: $color-grey-dark;

        &::after {
            background: $color-white;
        }
    }

    /* pseudo element acts like a child of the element, so the 100% width and height refers to the button sizes */
    &::after {
        content: '';
        display: inline-block;
        height: 100%;
        width: 100%;
        border-radius: 10rem;
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all 0.4s;
    }

     &--animated {
        animation: moveInBottom 1s ease-out .75s;
        animation-fill-mode: backwards;
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(5rem);
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}