.popup {
    height: 100vh;
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 1500;
    opacity: 0;
    visibility: hidden;
    transition: all .3s;

    // we can write conditions, if one of these are supported
    // graceful degradation - providing an alternative for browsers which doesnt support some newer properties
    @supports(-webkit-backdrop-filter: blur(10px)) or (backdrop-filter: blur(10px)) {
        -webkit-backdrop-filter: blur(10px);
        backdrop-filter: blur(10px);
        background-color: rgba($color-black, .3);
    }

    &__content {
        @include absoluteCenter;
        width: 75%;
        background-color: $color-white;
        box-shadow: 0 2rem 4rem rgba($color-black, .2);
        border-radius: 3px;
        display: table; // !
        overflow: hidden;
        opacity: 0;
        // elements have only 1 transform, and 1 already coming from the mixin. We have to repeat what we already have in order to apply 2 transforms at once
        transform: translate(-50%, -50%) scale(.25);
        transition: all .5s .2s;
    }

    &__left {
        width: 33.333%;
        display: table-cell;    // ! make parent as table, so table-cell will give elements the same height
    }

    &__right {
        width: 66.667%;
        display: table-cell;
        vertical-align: middle;
        padding: 3rem 5rem;
    }

    &__img {
        display: block;
        width: 100%;

    }

    &__text {
        font-size: 1.4rem;
        margin-bottom: 4rem;

        -moz-column-count: 2;
        column-count: 2;
        -moz-column-gap: 4rem;
        column-gap: 4rem;   // default value is 1em - currently it is 1em = 14px - size of the current element
        -moz-column-rule: 1px solid $color-grey-light-2;
        column-rule: 1px solid $color-grey-light-2;

        -moz-hyphens: auto;
        -ms-hyphens: auto;
        -webkit-hyphens: auto;
        hyphens: auto;  // to make it work we need to define lang in the HTML for our own language, now it's english: <html lang="en">
    }

    &__close {
        &:link, &:visited {
            color: $color-grey-dark;
            position: absolute;
            top: 2.5rem;
            right: 2.5rem;
            font-size: 3rem;
            text-decoration: none;
            display: inline-block;
            transition: all .2s;
            line-height: 1;

            &:hover {
                color: $color-primary;
            }
        }
    }

    // in HTML when the #popup id gets added to the URL, #popup becomes the target, so :target pseudo is available on the element
    &:target {  
        opacity: 1;
        visibility: visible;
    }

    &:target &__content {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}